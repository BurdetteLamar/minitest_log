<log>
  <summary_ verdicts='3' failures='2' errors='0'/>
  <section_ name='Test' method='verdict_assert_kind_of?' type='fail'>
    <section_ name='Args=[Array, {}, &quot;Message 0&quot;]'>
      <verdict_ method='verdict_assert_kind_of?' outcome='failed' id='0' message='Message 0'>
        <expected_ class='Class' value='Array'/>
        <actual_ class='Hash' value='{}'/>
        <exception_ class='Minitest::Assertion' message='Expected {} to be a kind of Array, not Hash.'>
          <backtrace_/>
        </exception_>
      </verdict_>
    </section_>
    <section_ name='Args=[Hash, [], &quot;Message 1&quot;]'>
      <verdict_ method='verdict_assert_kind_of?' outcome='failed' id='1' message='Message 1'>
        <expected_ class='Class' value='Hash'/>
        <actual_ class='Array' value='[]'/>
        <exception_ class='Minitest::Assertion' message='Expected [] to be a kind of Hash, not Array.'>
          <backtrace_/>
        </exception_>
      </verdict_>
    </section_>
  </section_>
  <verdict_ method='verdict_assert_equal?' outcome='passed' id='error_count'>
    <expected_ class='Integer' value='0'/>
    <actual_ class='Integer' value='0'/>
  </verdict_>
</log>
