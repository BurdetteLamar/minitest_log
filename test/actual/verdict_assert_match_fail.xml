<log>
  <summary_ verdicts='3' failures='2' errors='0'/>
  <section_ name='Test' method='verdict_assert_match?' type='fail'>
    <section_ name='Args=[/b/, &quot;xyz&quot;, &quot;Message 0&quot;]'>
      <verdict_ method='verdict_assert_match?' outcome='failed' id='0' message='Message 0'>
        <expected_ class='Regexp' value='/b/'/>
        <actual_ class='String' value='&quot;xyz&quot;'/>
        <exception_ class='Minitest::Assertion' message='Expected /b/ to match # encoding: UTF-8'>
          <backtrace_>
          </backtrace_>
        </exception_>
      </verdict_>
    </section_>
    <section_ name='Args=[/./, &quot;&quot;, &quot;Message 1&quot;]'>
      <verdict_ method='verdict_assert_match?' outcome='failed' id='1' message='Message 1'>
        <expected_ class='Regexp' value='/./'/>
        <actual_ class='String' value='&quot;&quot;'/>
        <exception_ class='Minitest::Assertion' message='Expected /./ to match # encoding: UTF-8'>
          <backtrace_>
          </backtrace_>
        </exception_>
      </verdict_>
    </section_>
  </section_>
  <verdict_ method='verdict_assert_equal?' outcome='passed' id='error_count'>
    <expected_ class='Integer' value='0'/>
    <actual_ class='Integer' value='0'/>
  </verdict_>
</log>
